## Loading libraries

library(stats)
library(tidyverse)
library(readxl)
library(dplyr)
library(survival)
library(prettyR)
library(xlsx)
library(formattable)
library(knitr)
library(gmodels)
library(broom)
library(purrr)
library(forestmodel)
library(ggplot2)
library(labelled)
library(car)
library(rcompanion)
library(questionr)



## Loading Excel files
col_types <- read_excel("col_types.xlsx", col_types = c("skip","text"))
col_types <- unlist(col_types, use.names = FALSE) #Importing the Excel file containing the column types

data_1 <- read_excel("data_1.xlsx", col_types = col_types)
data_2 <- read_excel("data_2.xlsx", col_types = col_types)
data <- bind_rows(data_1, data_2) #Importing the Excel data files

data <- filter(data, (Flowchart == 3 & generalized == 1 & CNEP == 0)) #Selecting patients according to selection criteria

remove(data_1,data_2,col_types) #Cleaning environment



## Constructing variables of interest

#Acute vascular etiologies
acute_vasc <- ifelse(((data$Ischemic_stroke == 1 | data$Hemoragic == 1 | data$PRES == 1 | data$TVC == 1) & data$acute == 1), 1, 0)
acute_stroke <- ifelse((data$Ischemic_stroke == 1 & data$acute == 1), 1, 0)
acute_hemoragic <- ifelse((data$Hemoragic == 1 & data$acute == 1), 1, 0)
acute_PRES <- ifelse((data$PRES == 1 & data$acute == 1), 1, 0)
acute_TVC <- ifelse((data$TVC == 1 & data$acute == 1), 1, 0)

#Acute toxic or metabolic etiologies
acute_toxic <- ifelse(((data$OH == 1 | data$Metabolic == 1 | data$Drug_intoxication == 1 | data$Drug_withdrawal == 1) & data$acute == 1), 1, 0)
acute_drug <- ifelse(((data$Drug_intoxication == 1 | data$Drug_withdrawal == 1) & data$acute == 1), 1, 0)
acute_OH <- ifelse((data$OH == 1 & data$acute == 1), 1, 0)
acute_metabolic <- ifelse((data$Metabolic == 1 & data$acute == 1), 1, 0)

#Acute traumatic brain injury
acute_trauma <- ifelse((data$Trauma == 1 & data$acute == 1), 1, 0)

#Acute CNS infection
acute_infection <- ifelse((data$CNS_infection == 1 & data$acute == 1 & data$acute == 1), 1, 0)

#Acute heatstroke
acute_heatstroke <- ifelse((data$heat_stroke == 1 & data$acute == 1), 1, 0)

#Progressive etiologies
tumor_progressive <- ifelse((data$brain_tumor == 1 & data$progressive == 1), 1, 0)
dysimmune_progressive <- ifelse((data$progressive == 1 & data$dysimmune == 1), 1, 0)

#Remote etiologies
remote_all <- ifelse((data$remote == 1 | data$acute_on_remote == 1 | data$unknown_on_remote == 1), 1, 0)

#Idiopathic or cryptogenic epilepsy
epilepto <- ifelse((data$Cryptogenic == 1 |	data$Congenital_hereditary == 1), 1, 0)

#mRS score cutoff
mRS_admission_01 <- ifelse((data$mRS_ad == 0 | data$mRS_ad == 1), 1, 0)
mRS_discharge_01 <- ifelse((data$mRS_at_H_discharge == 0 | data$mRS_at_H_discharge == 1) | ((data$mRS_at_H_discharge - data$mRS_ad) <= 0), 1, 0)
death_discharge <- ifelse(data$mRS_at_H_discharge == 6, 1, 0)
mRS_3month_01 <- ifelse((data$mRS_at_3_month == 0 | data$mRS_at_3_month == 1) | ((data$mRS_at_3_month - data$mRS_ad) <= 0), 1, 0)
death_3month <- ifelse(data$mRS_at_3_month == 6, 1, 0)

#Hyperglycemia
hyperglycemia <- ifelse(data$glycemieCapFirst > 1.6, 1, 0)

#SE duration
data$duree_crise <- replace(data$duree_crise, data$duree_crise == "<30",1)
data$duree_crise <- replace(data$duree_crise, data$duree_crise == "30-60",2)
data$duree_crise <- replace(data$duree_crise, data$duree_crise == "60-90",3)
data$duree_crise <- replace(data$duree_crise, data$duree_crise == "< 120",4)
data$duree_crise <- replace(data$duree_crise, data$duree_crise == "90-120",4)
data$duree_crise <- replace(data$duree_crise, data$duree_crise == ">120",5) #Recoding variable
dureeinf30 <- ifelse(data$duree_crise == 1, 1, 0)

#Anesthetics used
propofolmidazolam <- ifelse(data$propofol == 1 & data$midazolam == 1, 1, 0)
onlypropofol <- ifelse(data$propofol == 1 & data$midazolam == 0, 1, 0)
onlymidazolam <- ifelse(data$propofol == 0 & data$midazolam == 1, 1, 0)

import <- tibble(acute_vasc, acute_stroke, acute_hemoragic, acute_PRES, acute_TVC, acute_toxic, acute_drug, acute_OH, acute_metabolic, acute_trauma, acute_infection, acute_heatstroke, tumor_progressive, dysimmune_progressive, remote_all, epilepto, mRS_admission_01, mRS_discharge_01, death_discharge, mRS_3month_01, death_3month, hyperglycemia, dureeinf30, propofolmidazolam, onlypropofol, onlymidazolam)
data <- bind_cols(data,import) #Adding the new variables to the dataset
remove(acute_vasc, acute_stroke, acute_hemoragic, acute_PRES, acute_TVC, acute_toxic, acute_drug, acute_OH, acute_metabolic, acute_trauma, acute_infection, acute_heatstroke, tumor_progressive, dysimmune_progressive, remote_all, epilepto, mRS_admission_01, mRS_discharge_01, death_discharge, mRS_3month_01, death_3month, hyperglycemia, dureeinf30, propofolmidazolam, onlypropofol, onlymidazolam, import) #Cleaning environment

#Constructing more variables of interest based on the previous one
vasc_remote <- ifelse(((data$Ischemic_stroke == 1 | data$Hemoragic == 1) & data$remote_all == 1), 1, 0)
others_remote <- ifelse((data$Ischemic_stroke == 0 & data$Hemoragic == 0 & data$Cryptogenic == 0 &	data$Congenital_hereditary == 0 & data$remote_all == 1), 1, 0)

import <- tibble(vasc_remote, others_remote)
data <- bind_cols(data,import)
remove(vasc_remote, others_remote, import) #Cleaning environment



## Selecting variables of interest
continuous <- c("age", "SAPS_II", "SAPS_II_age", "STESS","tempFirst", "GCS_T_ad","ICU_stay", "SejourHOSP_auto", "dureeSED", "dureeVM")
for (i in continuous) {
  data[[i]] <- as.numeric(data[[i]])
}

factors <- c("sexe", "mRS_ad", "GOS_ad", "alcohol","cerebral_injury", "prev_epilepsy", "symptomatique", "cryptogenique", "idiopathique", "prev_SE", "out_of_hospital_onset", "secondary_generalized", "intermittente_seizure", "duree_crise", "focal_neurologic_signs", "unwitness_seizure", "duree_inconnue", "duree_crise", "RSE", "acute", "acute_on_remote", "remote", "progressive", "unknown", "unknown_on_remote", "control", "initial_failure", "breakthrough_seizures", "withdrawal_seizures", "intolerable_side_effects", "death_during_treatment", "clonies_ad", "MRI_An_post_critique", "1st_line", "2nd line", "fosphenytoine", "phenobarbital", "levetiracetam", "valproate", "autres_2_eme_ligne", "IOT_bef", "IOT_bef_SE", "IOT_bef_coma", "IOT_bef_resp","IOT_ad", "IOT_ad_SE", "IOT_ad_coma", "IOT_ad_resp", "MRI", "early_withdrawal", "acute_vasc", "acute_stroke", "acute_hemoragic", "acute_PRES", "acute_TVC", "acute_toxic", "acute_drug", "acute_OH", "acute_metabolic", "acute_trauma", "acute_infection", "acute_heatstroke", "tumor_progressive", "dysimmune_progressive", "remote_all, epilepto", "mRS_admission_01", "mRS_discharge_01", "death_discharge", "mRS_3month_01", "death_3month", "hyperglycemia", "dureeinf30", "vasc_remote", "others_remote")
for (i in factors) {
  data[[i]] <- as.factor(data[[i]])
}

remove(i) #Cleaning environment



## Resuming data

for (i in continuous) {
  #Resuming continuous variables in the overall cohort
  x <- describe.numeric(data[[i]])
  x <- as.data.frame(x)
  row.names(x) <- c("Mean", "Median", "Variance", "SD", "Valid n")
  colnames(x) <- c(i)
  y <- quantile(data[[i]], prob=c(.25, .75), na.rm = TRUE)
  y <- as.data.frame(y)
  colnames(y) <- c(i)
  z <- sum(is.na(data[[i]]))
  z <- as.data.frame(z)
  row.names(z) <- c("NA")
    colnames(z) <- c(i)
  x <- rbind(x, z, y)
  print(kable(x))
  remove(x, y, z) #Cleaning environment
  cat("\n")
  
  #Resuming continuous variables in the different subgroups
  uncontrol <- filter(data,data$control == 0)
  control <- filter(data,data$control == 1)
  Missing <- c(sum(is.na(a[[i]])),sum(is.na(b[[i]])))
  Missing <- as.data.frame(Missing)
  colnames(missing) <- c("NA")
  row.names(missing) <- c("Uncontrolled SE", "Controlled SE")
  Mean <- tapply(data[[i]], control, FUN = mean, na.rm = TRUE)
  Mean <- as.data.frame(Mean)
  SD <- tapply(data[[i]], control, FUN = sd, na.rm = 1)
  SD <- as.data.frame(SD)
  Q1 <- c((quantile(uncontrol[[i]], prob=c(.25), na.rm = TRUE)),quantile(control[[i]], prob=c(.25), na.rm = TRUE))
  Q1 <- as.data.frame(Q1)
  colnames(Q1) <- c("25%")
  Q3 <- c((quantile(uncontrol[[i]], prob=c(.75), na.rm = TRUE)),quantile(control[[i]], prob=c(.75), na.rm = TRUE))
  Q3 <- as.data.frame(Q3)
  colnames(Q3) <- c("75%")
  Median <- tapply(data[[i]], control, FUN = median, na.rm = TRUE)
  Median <- as.data.frame(Median)
  Median <- cbind(Q1, Median, Q3, Mean, SD, Missing)
  row.names(Median) <- c("Uncontrolled SE", "Controlled SE")
  print(kable(Median))
  remove(uncontrol, control, Missing, Mean, SD, Q1, Q3, Median) #Cleaning environment
  cat("\n")
}

for (i in factors) {
  #Resuming factors (n)
  cat("\n")
  uncontrol <- filter(data,data$control == 0)
  control <- filter(data,data$control == 1)
  
  x <- table(data[[i]], useNA = "always")
  x <- as.data.frame(x)
  y <- table(uncontrol[[i]], useNA = "always")
  y <- as.data.frame(y)
  z <- table(control[[i]], useNA = "always")
  z <- as.data.frame(z)
  x <- cbind(x,y[2],z[2])
  colnames(x) <- c(i, "Overall Cohort (n)", "Uncontrolled SE (n)", "Controlled SE (n)")
  print(kable(x))
  remove(x, y, z) #Cleaning environment
  cat("\n")
  
  #Resuming factors (%)
  a <- prop.table(table(data[[i]], useNA = "no"))
  a <- as.data.frame(a)
  b <- prop.table(table(uncontrol[[i]], useNA = "no"))
  b <- as.data.frame(b)
  c <- prop.table(table(control[[i]], useNA = "no"))
  c <- as.data.frame(c)
  a <- cbind(a, b[2], c[2])
  colnames(a) <- c(i, "Overall Cohort (%)", "Uncontrolled SE (%)", "Controlled SE (%)")
  print(kable(a))
  remove(uncontrol, control, a, b, c) #Cleaning environment
  cat("\n")
}
remove(i) #Cleaning environment


##Resuming data in the subgroup of patients without early withdrawal

#Defining variables of interest (continuous)
variableofinterest <- c("time_before_anaesthetic_withdrawal")

#Resuming continuous variables
for (i in variableofinterest) {
  #Resuming continuous variables in the overall cohort
  a <- filter(data,data$early_withdrawal == 0)
  x <- describe.numeric(a[[i]])
  x <- as.data.frame(x)
  row.names(x) <- c("Mean", "Median", "Variance", "SD", "Valid n")
  colnames(x) <- c(i)
  y <- quantile(a[[i]], prob=c(.25, .75), na.rm = TRUE)
  y <- as.data.frame(y)
  colnames(y) <- c(i)
  z <- sum(is.na(a[[i]]))
  z <- as.data.frame(z)
  row.names(z) <- c("NA")
    colnames(z) <- c(i)
  x <- rbind(x, z, y)
  print(kable(x))
  remove(a, x, y, z) #Cleaning environment
  cat("\n")
  
  #Resuming continuous variables in the different subgroups
  uncontrol <- filter(data,data$control == 0 & data$early_withdrawal == 0)
  control <- filter(data,data$control == 1 & data$early_withdrawal == 0)
  a <- filter(data,data$early_withdrawal == 0)
  Missing <- c(sum(is.na(a[[i]])),sum(is.na(b[[i]])))
  Missing <- as.data.frame(Missing)
  colnames(Missing) <- c("NA")
  row.names(Missing) <- c("Uncontrolled SE", "Controlled SE")
  Mean <- tapply(a[[i]], control, FUN = mean, na.rm = TRUE)
  Mean <- as.data.frame(Mean)
  SD <- tapply(a[[i]], control, FUN = sd, na.rm = 1)
  SD <- as.data.frame(SD)
  Q1 <- c((quantile(uncontrol[[i]], prob=c(.25), na.rm = TRUE)),quantile(control[[i]], prob=c(.25), na.rm = TRUE))
  Q1 <- as.data.frame(Q1)
  colnames(Q1) <- c("25%")
  Q3 <- c((quantile(uncontrol[[i]], prob=c(.75), na.rm = TRUE)),quantile(control[[i]], prob=c(.75), na.rm = TRUE))
  Q3 <- as.data.frame(Q3)
  colnames(Q3) <- c("75%")
  Median <- tapply(a[[i]], control, FUN = median, na.rm = TRUE)
  Median <- as.data.frame(Median)
  Median <- cbind(Q1, Median, Q3, Mean, SD, Missing)
  row.names(Median) <- c("Uncontrolled SE", "Controlled SE")
  print(kable(Median))
  remove(a,uncontrol, control, Missing, Mean, SD, Q1, Q3, Median) #Cleaning environment
  cat("\n")
}
remove(i, variableofinterest) #Cleaning environment

#Defining variables of interest (factors)
variableofinterest <- c("propofol", "midazolam", "thiopental", "propofolmidazolam", "onlypropofol", "onlymidazolam")

#Resuming factors
for (i in variableofinterest) {
  #Resuming factors (n)
  cat("\n")
  noearlywithdrawal <- filter(data,data$early_withdrawal==0)
  uncontrol <- filter(data,data$control == 0 & data$early_withdrawal==0)
  control <- filter(data,data$control == 1 & data$early_withdrawal==0)
  
  x <- table(noearlywithdrawal[[i]], useNA = "always")
  x <- as.data.frame(x)
  y <- table(uncontrol[[i]], useNA = "always")
  y <- as.data.frame(y)
  z <- table(control[[i]], useNA = "always")
  z <- as.data.frame(z)
  x <- cbind(x,y[2],z[2])
  colnames(x) <- c(i, "Overall Cohort (n)", "Uncontrolled SE (n)", "Controlled SE (n)")
  print(kable(x))
  remove(x, y, z) #Cleaning environment
  cat("\n")
  
  #Resuming factors (%)
  a <- prop.table(table(noearlywithdrawal[[i]], useNA = "no"))
  a <- as.data.frame(a)
  b <- prop.table(table(uncontrol[[i]], useNA = "no"))
  b <- as.data.frame(b)
  c <- prop.table(table(control[[i]], useNA = "no"))
  c <- as.data.frame(c)
  a <- cbind(a, b[2], c[2])
  colnames(a) <- c(i, "Overall Cohort (%)", "Uncontrolled SE (%)", "Controlled SE (%)")
  print(kable(a))
  remove(noearlywithdrawal, uncontrol, control, a, b, c) #Cleaning environment
  cat("\n")
}
remove(i, variableofinterest) #Cleaning environment


##Describing propofol dosage in the subgroup of patients treated with propofol and without early withdrawal

#Resuming in the overall cohort (Propofol at initiation)
a <- filter(data,data$propofol==1 & data$early_withdrawal==0)
b <- describe.numeric(a[["propofol_at_initiation"]])
b <- as.data.frame(b)
colnames(b) <- c("Propofol at initiation")
row.names(b) <- c("Mean", "Median", "Variance", "SD", "Valid n")
c <- quantile(a[["propofol_at_initiation"]], prob=c(.25, .75), na.rm = TRUE)
c <- as.data.frame(c)
colnames(c) <- c("Propofol at initiation")
d <- sum(is.na(a[["propofol_at_initiation"]]))
d <- as.data.frame(d)
colnames(d) <- c("Propofol at initiation")
row.names(d) <- c("NA")
b <- rbind(b, c, d)
print(kable(b))
remove(a, b, c, d) #Cleaning environment
cat("\n")

#Resuming in the different subgroups (Propofol at initiation)
uncontrol <- filter(data,data$control == 0 & data$propofol==1 & data$early_withdrawal==0)
control <- filter(data,data$control == 1 & data$propofol==1 & data$early_withdrawal==0)
 a <- filter(data,data$early_withdrawal == 0 & data$propofol==1)
Missing <- c(sum(is.na(uncontrol[["propofol_at_initiation"]])),sum(is.na(control[["propofol_at_initiation"]])))
Missing <- as.data.frame(Missing)
colnames(Missing) <- c("NA")
row.names(Missing) <- c("Uncontrolled SE", "Controlled SE")
Mean <- tapply(a[["propofol_at_initiation"]], a$control, FUN = mean, na.rm = TRUE)
Mean <- as.data.frame(Mean)
SD <- tapply(a[["propofol_at_initiation"]], a$control, FUN = sd, na.rm = 1)
SD <- as.data.frame(SD)
Q1 <- c((quantile(uncontrol[["propofol_at_initiation"]], prob=c(.25), na.rm = TRUE)),quantile(control[["propofol_at_initiation"]], prob=c(.25), na.rm = TRUE))
Q1 <- as.data.frame(Q1)
colnames(Q1) <- c("25%")
Q3 <- c((quantile(uncontrol[["propofol_at_initiation"]], prob=c(.75), na.rm = TRUE)),quantile(control[["propofol_at_initiation"]], prob=c(.75), na.rm = TRUE))
Q3 <- as.data.frame(Q3)
colnames(Q3) <- c("75%")
Median <- tapply(a[["propofol_at_initiation"]], control, FUN = median, na.rm = TRUE)
Median <- as.data.frame(Median)
Median <- cbind(Q1, Median, Q3, Mean, SD, Missing)
row.names(Median) <- c("Uncontrolled SE", "Controlled SE")
print(kable(Median))
remove(a, uncontrol, control, Missing, Mean, SD, Q1, Q3, Median) #Cleaning environment
cat("\n")
 
#Resuming in the overall cohort (Propofol during the 6 first hours)
a <- filter(data,data$propofol==1 & data$early_withdrawal==0)
b <- describe.numeric(a[["propofol_during_6_first_hours"]])
b <- as.data.frame(b)
colnames(b) <- c("Propofol during 6 first hours")
row.names(b) <- c("Mean", "Median", "Variance", "SD", "Valid n")
c <- quantile(a[["propofol_during_6_first_hours"]], prob=c(.25, .75), na.rm = TRUE)
c <- as.data.frame(c)
colnames(c) <- c("Propofol during 6 first hours")
d <- sum(is.na(a[["propofol_during_6_first_hours"]]))
d <- as.data.frame(d)
colnames(d) <- c("Propofol during 6 first hours")
row.names(d) <- c("NA")
b <- rbind(b, c, d)
print(kable(b))
remove(a, b, c, d) #Cleaning environment
cat("\n")
  
#Resuming in the different subgroups (Propofol during the 6 first hours)
uncontrol <- filter(data,data$control == 0 & data$propofol==1 & data$early_withdrawal==0)
control <- filter(data,data$control == 1 & data$propofol==1 & data$early_withdrawal==0)
 a <- filter(data,data$early_withdrawal == 0 & data$propofol==1)
Missing <- c(sum(is.na(uncontrol[["propofol_during_6_first_hours"]])),sum(is.na(control[["propofol_during_6_first_hours"]])))
Missing <- as.data.frame(Missing)
colnames(Missing) <- c("NA")
row.names(Missing) <- c("Uncontrolled SE", "Controlled SE")
Mean <- tapply(a[["propofol_during_6_first_hours"]], a$control, FUN = mean, na.rm = TRUE)
Mean <- as.data.frame(Mean)
SD <- tapply(a[["propofol_during_6_first_hours"]], a$control, FUN = sd, na.rm = 1)
SD <- as.data.frame(SD)
Q1 <- c((quantile(uncontrol[["propofol_during_6_first_hours"]], prob=c(.25), na.rm = TRUE)),quantile(control[["propofol_during_6_first_hours"]], prob=c(.25), na.rm = TRUE))
Q1 <- as.data.frame(Q1)
colnames(Q1) <- c("25%")
Q3 <- c((quantile(uncontrol[["propofol_during_6_first_hours"]], prob=c(.75), na.rm = TRUE)),quantile(control[["propofol_during_6_first_hours"]], prob=c(.75), na.rm = TRUE))
Q3 <- as.data.frame(Q3)
colnames(Q3) <- c("75%")
Median <- tapply(a[["propofol_during_6_first_hours"]], a$control, FUN = median, na.rm = TRUE)
Median <- as.data.frame(Median)
Median <- cbind(Q1, Median, Q3, Mean, SD, Missing)
row.names(Median) <- c("Uncontrolled SE", "Controlled SE")
print(kable(Median))
remove(a, uncontrol, control, Missing, Mean, SD, Q1, Q3, Median) #Cleaning environment
cat("\n")



##Univariate analysis (Continuous variables)
for (i in continuous) {
  uncontrol <- filter(data,data$control == 0)
  control <- filter(data,data$control == 1)
  
  #Performing test for normality
  x <- shapiro.test(uncontrol[[i]])
  y <- shapiro.test(control[[i]])
  
  #Comparing means
  if(x$p.value < 0.05 | y$p.value <0.05 | nrow(uncontrol[i]) < 30 | nrow(control[i]) < 30) {
    z <- wilcox.test(data[[i]] ~ data$control, data = data, na.rm = TRUE)
    z <- map_df(list(z), tidy)
    z <- z[c("method", "alternative", "p.value")]
    colnames(z) <- c(i, "alternative", "p.value")
    print(kable(z))
    cat("\n")
    
  } else {
    z <- t.test(data[[i]] ~ data$control, data = data, var.test = TRUE, na.rm = TRUE)
    z <- map_df(list(z), tidy)
    z <- z[c("method", "alternative", "p.value", "conf.low", "conf.high")]
    colnames(z) <- c(i, "alternative", "p.value", "conf.low", "conf.high")
    print(kable(z))
    cat("\n")
  }
  remove(uncontrol, control, x, y ,z) #Cleaning environment
}
remove(i) #Cleaning environment

##Univariate analysis (factors)
for (i in factors) {
  if(sum((chisq.test(data[[i]], data$control, correct = FALSE)$expected) < 5) == 0) {
    x <- chisq.test(data[[i]], data$control, correct = FALSE)
    x <- map_df(list(y), tidy)
    x <- x[c("method","p.value")]
    colnames(x) <- c(i, "p.value")
    print(kable(x))
    cat("\n")
  } else {
    x <- fisher.test(data[[i]], data$control, workspace = 9000000)
    x <- map_df(list(y), tidy)
    x <- x[c("method", "alternative", "p.value")]
    colnames(x) <-c(i, "alternative", "p.value")
    print(kable(x))
    cat("\n")
  }
  remove(x) #Cleaning environment
}
remove(i) #Cleaning environment


##Univariate analysis in the subgroup of patients without early withdrawal (continuous)

variableofinterest <- c("time_before_anaesthetic_withdrawal")

for (i in variableofinterest) {
  uncontrol <- filter(data,data$control == 0 & data$early_withdrawal == 0)
  control <- filter(data,data$control == 1 & data$early_withdrawal == 0)
  a <- filter(data,data$early_withdrawal == 0)
  
  #Performing test for normality
  x <- shapiro.test(uncontrol[[i]])
  y <- shapiro.test(control[[i]])
  
  #Comparing means
  if(x$p.value < 0.05 | y$p.value <0.05 | nrow(uncontrol[i]) < 30 | nrow(control[i]) < 30) {
    z <- wilcox.test(a[[i]] ~ a$control, data = a, na.rm = TRUE)
    z <- map_df(list(z), tidy)
    z <- z[c("method", "alternative", "p.value")]
    colnames(z) <- c(i, "alternative", "p.value")
    print(kable(z))
    cat("\n")
    
  } else {
    z <- t.test(a[[i]] ~ a$control, data = a, var.test = TRUE, na.rm = TRUE)
    z <- map_df(list(z), tidy)
    z <- z[c("method", "alternative", "p.value", "conf.low", "conf.high")]
    colnames(z) <- c(i, "alternative", "p.value", "conf.low", "conf.high")
    print(kable(z))
    cat("\n")
  }
  remove(a, uncontrol, control, x, y ,z) #Cleaning environment
}
remove(i, variableofinterest) #Cleaning environment

##Univariate analysis in the subgroup of patients without early withdrawal (factors)
variableofinterest <- c("propofol", "midazolam", "thiopental", "propofolmidazolam", "onlypropofol", "onlymidazolam")
a <- filter(data,data$early_withdrawal == 0)

for (i in variableofinterest) {
  if(sum((chisq.test(a[[i]], a$control, correct = FALSE)$expected) < 5) == 0) {
    x <- chisq.test(a[[i]], a$control, correct = FALSE)
    x <- map_df(list(x), tidy)
    x <- x[c("method","p.value")]
    colnames(x) <- c(i, "p.value")
    print(kable(x))
    cat("\n")
  } else {
    x <- fisher.test(a[[i]], a$control, workspace = 9000000)
    x <- map_df(list(x), tidy)
    x <- x[c("method", "alternative", "p.value")]
    colnames(x) <-c(i, "alternative", "p.value")
    print(kable(x))
    cat("\n")
  }
  remove(x) #Cleaning environment
}

remove(i, variableofinterest, a) #Cleaning environment

##Univariate analysis (Propofol at initiation)
uncontrol <- filter(data,data$control == 0 & data$propofol==1 & data$early_withdrawal==0)
control <- filter(data,data$control == 1 & data$propofol==1 & data$early_withdrawal==0)
a <- filter(data,data$early_withdrawal == 0 & data$propofol==1)
  
#Performing test for normality
x <- shapiro.test(uncontrol[["propofol_at_initiation"]])
y <- shapiro.test(control[["propofol_at_initiation"]])
  
#Comparing means
if(x$p.value < 0.05 | y$p.value <0.05 | nrow(uncontrol["propofol_at_initiation"]) < 30 | nrow(control["propofol_at_initiation"]) < 30) {
  z <- wilcox.test(a[["propofol_at_initiation"]] ~ a$control, data = a, na.rm = TRUE)
  z <- map_df(list(z), tidy)
  z <- z[c("method", "alternative", "p.value")]
  colnames(z) <- c("propofol_at_initiation", "alternative", "p.value")
  print(kable(z))
  cat("\n")
} else {
  z <- t.test(a[["propofol_at_initiation"]] ~ a$control, data = a, var.test = TRUE, na.rm = TRUE)
  z <- map_df(list(z), tidy)
  z <- z[c("method", "alternative", "p.value", "conf.low", "conf.high")]
  colnames(z) <- c("propofol_at_initiation", "alternative", "p.value", "conf.low", "conf.high")
  print(kable(z))
  cat("\n")   
}
remove(a, uncontrol, control, x, y, z) #Cleaning environment
    
##Univariate analysis (Propofol during the 6 first hours)
uncontrol <- filter(data,data$control == 0 & data$propofol==1 & data$early_withdrawal==0)
control <- filter(data,data$control == 1 & data$propofol==1 & data$early_withdrawal==0)
a <- filter(data,data$early_withdrawal == 0 & data$propofol==1)
  
#Performing test for normality
x <- shapiro.test(uncontrol[["propofol_during_6_first_hours"]])
y <- shapiro.test(control[["propofol_during_6_first_hours"]])
  
#Comparing means
if(x$p.value < 0.05 | y$p.value <0.05 | nrow(uncontrol["propofol_during_6_first_hours"]) < 30 | nrow(control["propofol_during_6_first_hours"]) < 30) {
  z <- wilcox.test(a[["propofol_during_6_first_hours"]] ~ a$control, data = a, na.rm = TRUE)
  z <- map_df(list(z), tidy)
  z <- z[c("method", "alternative", "p.value")]
  colnames(z) <- c("propofol_during_6_first_hours", "alternative", "p.value")
  print(kable(z))
  cat("\n") 
} else {
  z <- t.test(a[["propofol_during_6_first_hours"]] ~ a$control, data = a, var.test = TRUE, na.rm = TRUE)
  z <- map_df(list(z), tidy)
  z <- z[c("method", "alternative", "p.value", "conf.low", "conf.high")]
  colnames(z) <- c("propofol_during_6_first_hours", "alternative", "p.value", "conf.low", "conf.high")
  print(kable(z))
  cat("\n")
}
remove(uncontrol, control, x, y, z, a) #Cleaning environment


## Binomial logistic regression
data$control <- relevel(data$control, "1")
regression <- glm(control ~ prev_SE + clonies_ad + toxic + acute_infection + remotenoncryptogenic + tumor_progressive + unknown + SAPS_II_age, data = data, family = binomial(logit))

vif(regression) #Assessing the generalized variance inflation factors
regression <- step(regression) #Performing the binomial logistic regression

nagelkerke(regression)

summary(regression)
coef(regression)
odds.ratio(regression, level=0.95)



## Analysis of the subgroup of patients with persistent seizure at admission

#Choosing the variables to be investigated (factors)
variableofinterest <- c("sexe", "mRS_ad", "GOS_ad", "alcohol","cerebral_injury", "prev_epilepsy", "symptomatique", "cryptogenique", "idiopathique", "prev_SE", "out_of_hospital_onset", "secondary_generalized", "intermittente_seizure", "duree_crise", "focal_neurologic_signs", "unwitness_seizure", "duree_inconnue", "duree_crise", "RSE", "acute", "acute_on_remote", "remote", "progressive", "unknown", "unknown_on_remote", "control", "initial_failure", "breakthrough_seizures", "withdrawal_seizures", "intolerable_side_effects", "death_during_treatment", "clonies_ad", "MRI_An_post_critique", "1st_line", "2nd line", "fosphenytoine", "phenobarbital", "levetiracetam", "valproate", "autres_2_eme_ligne", "IOT_bef", "IOT_bef_SE", "IOT_bef_coma", "IOT_bef_resp","IOT_ad", "IOT_ad_SE", "IOT_ad_coma", "IOT_ad_resp", "MRI", "early_withdrawal", "acute_vasc", "acute_stroke", "acute_hemoragic", "acute_PRES", "acute_TVC", "acute_toxic", "acute_drug", "acute_OH", "acute_metabolic", "acute_trauma", "acute_infection", "acute_heatstroke", "tumor_progressive", "dysimmune_progressive", "remote_all, epilepto", "mRS_admission_01", "mRS_discharge_01", "death_discharge", "mRS_3month_01", "death_3month", "hyperglycemia", "dureeinf30","vasc_remote", "others_remote")

for (i in variableofinterest) {
  #Resuming factors (n)
  noclonie <- filter(data,data$clonies_ad == 0)
  clonie <- filter(data,data$clonies_ad == 1)
  
  x <- table(data[[i]], useNA = "always")
  x <- as.data.frame(x)
  y <- table(noclonie[[i]], useNA = "always")
  y <- as.data.frame(y)
  z <- table(clonie[[i]], useNA = "always")
  z <- as.data.frame(z)
  x <- cbind(x,y[2],z[2])
  colnames(x) <- c(i, "Overall Cohort (n)", "No persistent seizure at admission (n)", "Persistent seizures at admission (n)")
  print(kable(x))
  cat("\n")
  
  #Resuming factors (%)
  a <- prop.table(table(data[[i]], useNA = "no"))
  a <- as.data.frame(a)
  b <- prop.table(table(noclonie[[i]], useNA = "no"))
  b <- as.data.frame(b)
  c <- prop.table(table(clonie[[i]], useNA = "no"))
  c <- as.data.frame(c)
  a <- cbind(a,b[2],c[2])
  colnames(a) <- c(i, "Overall Cohort (%)", "No persistent seizure at admission (%)", "Persistent seizure at admission (%)")
  print(kable(a))
  remove(noclonie, clonie, x, y, z, a, b, c) #Cleaning environment
  cat("\n")
}
remove(i) #Cleaning environment

#Univariate analysis (factors)
for (i in variableofinterest) {
  if(sum((chisq.test(data[[i]], data$clonies_ad, correct = FALSE)$expected) < 5) == 0) {
    x <- chisq.test(data[[i]], data$clonies_ad, correct = FALSE)
    x <- map_df(list(x), tidy)
    x <- x[c("method","p.value")]
    colnames(x) <- c(i, "p.value")
    print(kable(x))
    cat("\n")
  } else {
    x <- fisher.test(data[[i]], data$clonies_ad, workspace = 9000000)
    x <- map_df(list(x), tidy)
    x <- x[c("method", "alternative", "p.value")]
    colnames(x) <-c(i, "alternative", "p.value")
    print(kable(x))
    cat("\n")
  }
  remove(x) #Cleaning environment
}
remove(i, variableofinterest) #Cleaning environment

#Choosing the variables to be investigated (continuous variables)
variableofinterest <- c("age", "SAPS_II", "SAPS_II_age", "STESS","tempFirst", "GCS_T_ad")

for (i in variableofinterest) {
  #Resuming continuous variables in the overall cohort
  cat("\n")
  x <- describe.numeric(data[[i]])
  x <- as.data.frame(x)
  colnames(x) <- c(i)
  row.names(x) <- c("Mean", "Median", "Variance", "SD", "Valid n")
  y <- quantile(data[[i]], prob=c(.25, .75), na.rm = TRUE)
  y <- as.data.frame(y)
  colnames(y) <- c(i)
  z <- sum(is.na(data[[i]]))
  z <- as.data.frame(z)
  colnames(z) <- c(i)
  row.names(z) <- c("NA")
  x <- rbind(x, z, y)
  print(kable(x))
  remove(x, y, z) #Cleaning environment
  cat("\n")
  
  #Resuming continuous variables in the different subgroups
  noclonie <- filter(data,data$clonies_ad == 0)
  clonie <- filter(data,data$clonies_ad == 1)
  Missing <- c(sum(is.na(noclonie[[i]])),sum(is.na(clonie[[i]])))
  Missing <- as.data.frame(Missing)
  colnames(Missing) <- c("NA")
  row.names(Missing) <- c("No persistent seizure", "Persistent seizure")
  Mean <- tapply(data[[i]],data$clonies_ad, FUN = mean, na.rm = TRUE)
  Mean <- as.data.frame(Mean)
  SD <- tapply(data[[i]], data$clonies_ad, FUN = sd, na.rm = 1)
  SD <- as.data.frame(SD)
  Q1 <- c((quantile(noclonie[[i]], prob=c(.25), na.rm = TRUE)),quantile(clonie[[i]], prob=c(.25), na.rm = TRUE))
  Q1 <- as.data.frame(Q1)
  colnames(Q1) <- c("25%")
  Q3 <- c((quantile(noclonie[[i]], prob=c(.75), na.rm = TRUE)),quantile(clonie[[i]], prob=c(.75), na.rm = TRUE))
  Q3 <- as.data.frame(Q3)
  colnames(Q3) <- c("75%")
  Median <- tapply(data[[i]], data$clonies_ad, FUN = median, na.rm = TRUE)
  Median <- as.data.frame(Median)
  Median <- cbind(Q1, Median, Q3, Mean, SD, Missing)
  row.names(Median) <- c("No persistent seizure", "Persistent seizure")
  print(kable(Median))
  remove(noclonie, clonie, Missing, Mean, SD, Q1, Q3, Median) #Cleaning environment
  cat("\n")
}
remove(i) #Cleaning environment

#Univariate analysis (continuous variables)
for (i in variableofinterest) {
  noclonie <- filter(data,data$clonies_ad == 0)
  clonie <- filter(data,data$clonies_ad == 1)
  
  #Performing test for normality
  x <- shapiro.test(noclonie[[i]])
  y <- shapiro.test(clonie[[i]])
  
  #Comparing means
  if(x$p.value < 0.05 | y$p.value <0.05 | nrow(noclonie[i]) < 30 | nrow(clonie[i]) < 30) {
    z <- wilcox.test(data[[i]] ~ data$clonies_ad, data = data, na.rm = TRUE)
    z <- map_df(list(z), tidy)
    z <- z[c("method", "alternative", "p.value")]
    colnames(z) <- c(i, "alternative", "p.value")
    print(kable(z))
    cat("\n")
    
  } else {
    z <- t.test(data[[i]] ~ data$control, data = data, var.test = TRUE, na.rm = TRUE)
    z <- map_df(list(z), tidy)
    z <- z[c("method", "alternative", "p.value", "conf.low", "conf.high")]
    colnames(z) <- c(i, "alternative", "p.value", "conf.low", "conf.high")
    print(kable(z))
    cat("\n")
  }
  remove(noclonie, clonie, x, y ,z) #Cleaning environment
}
remove(i, variableofinterest) #Cleaning environment


#Resuming continuous variables in the different subgroups (Propofol at initiation)
noclonie <- filter(data,data$clonies_ad == 0 & data$propofol==1 & data$early_withdrawal==0)
clonie <- filter(data,data$clonies_ad == 1 & data$propofol==1 & data$early_withdrawal==0)
a <- filter(data,data$early_withdrawal == 0 & data$propofol==1)
Missing <- c(sum(is.na(noclonie[["propofol_at_initiation"]])),sum(is.na(clonie[["propofol_at_initiation"]])))
Missing <- as.data.frame(Missing)
colnames(Missing) <- c("NA")
row.names(Missing) <- c("No persistent seizure", "Persistent seizure")
Mean <- tapply(a[["propofol_at_initiation"]], a$clonies_ad, FUN = mean, na.rm = TRUE)
Mean <- as.data.frame(Mean)
SD <- tapply(a[["propofol_at_initiation"]], a$clonies_ad, FUN = sd, na.rm = 1)
SD <- as.data.frame(SD)
Q1 <- c((quantile(noclonie[["propofol_at_initiation"]], prob=c(.25), na.rm = TRUE)),quantile(clonie[["propofol_at_initiation"]], prob=c(.25), na.rm = TRUE))
Q1 <- as.data.frame(Q1)
colnames(Q1) <- c("25%")
Q3 <- c((quantile(noclonie[["propofol_at_initiation"]], prob=c(.75), na.rm = TRUE)),quantile(clonie[["propofol_at_initiation"]], prob=c(.75), na.rm = TRUE))
Q3 <- as.data.frame(Q3)
colnames(Q3) <- c("75%")
Median <- tapply(a[["propofol_at_initiation"]], a$clonies_ad, FUN = median, na.rm = TRUE)
Median <- as.data.frame(Median)
Median <- cbind(Q1, Median, Q3, Mean, SD, Missing)
row.names(Median) <- c("No persistent seizure", "Persistent seizure")
print(kable(Median))
remove(a, noclonie, clonie, Missing, Mean, SD, Q1, Q3, Median) #Cleaning environment
cat("\n")

#Univariate analysis (Propofol at initiation)
noclonie <- filter(data,data$clonies_ad == 0 & data$propofol==1 & data$early_withdrawal==0)
clonie <- filter(data,data$clonies_ad == 1 & data$propofol==1 & data$early_withdrawal==0)
a <- filter(data,data$early_withdrawal == 0 & data$propofol==1)
  
#Performing test for normality
x <- shapiro.test(noclonie[["propofol_at_initiation"]])
y <- shapiro.test(clonie[["propofol_at_initiation"]])
  
#Comparing means
if(x$p.value < 0.05 | y$p.value <0.05 | nrow(noclonie["propofol_at_initiation"]) < 30 | nrow(clonie["propofol_at_initiation"]) < 30) {
  z <- wilcox.test(a[["propofol_at_initiation"]] ~ a$clonies_ad, data = a, na.rm = TRUE)
  z <- map_df(list(z), tidy)
  z <- z[c("method", "alternative", "p.value")]
  colnames(z) <- c("propofol_at_initiation", "alternative", "p.value")
  print(kable(z))
  cat("\n") 
} else {
  z <- t.test(a[["propofol_at_initiation"]] ~ a$clonies_ad, data = a, var.test = TRUE, na.rm = TRUE)
  z <- map_df(list(z), tidy)
  z <- z[c("method", "alternative", "p.value", "conf.low", "conf.high")]
  colnames(z) <- c("propofol_at_initiation", "alternative", "p.value", "conf.low", "conf.high")
  print(kable(z))
  cat("\n")
}
remove(noclonie, clonie, x, y, z) #Cleaning environment

#Resuming continuous variables in the different subgroups (Propofol during the 6 first hours)
noclonie <- filter(data,data$clonies_ad == 0 & data$propofol==1 & data$early_withdrawal==0)
clonie <- filter(data,data$clonies_ad == 1 & data$propofol==1 & data$early_withdrawal==0)
a <- filter(data,data$early_withdrawal == 0 & data$propofol==1)
Missing <- c(sum(is.na(noclonie[["propofol_during_6_first_hours"]])),sum(is.na(clonie[["propofol_during_6_first_hours"]])))
Missing <- as.data.frame(Missing)
colnames(Missing) <- c("NA")
row.names(Missing) <- c("No persistent seizure", "Persistent seizure")
Mean <- tapply(a[["propofol_during_6_first_hours"]], a$clonies_ad, FUN = mean, na.rm = TRUE)
Mean <- as.data.frame(Mean)
SD <- tapply(a[["propofol_during_6_first_hours"]], a$clonies_ad, FUN = sd, na.rm = 1)
SD <- as.data.frame(SD)
Q1 <- c((quantile(noclonie[["propofol_during_6_first_hours"]], prob=c(.25), na.rm = TRUE)),quantile(clonie[["propofol_during_6_first_hours"]], prob=c(.25), na.rm = TRUE))
Q1 <- as.data.frame(Q1)
colnames(Q1) <- c("25%")
Q3 <- c((quantile(noclonie[["propofol_during_6_first_hours"]], prob=c(.75), na.rm = TRUE)),quantile(clonie[["propofol_during_6_first_hours"]], prob=c(.75), na.rm = TRUE))
Q3 <- as.data.frame(Q3)
colnames(Q3) <- c("75%")
Median <- tapply(a[["propofol_during_6_first_hours"]], a$clonies_ad, FUN = median, na.rm = TRUE)
Median <- as.data.frame(Median)
Median <- cbind(Q1, Median, Q3, Mean, SD, Missing)
row.names(Median) <- c("No persistent seizure", "Persistent seizure")
print(kable(Median))
remove(a, noclonie, clonie, Missing, Mean, SD, Q1, Q3, Median) #Cleaning environment
cat("\n")

#Univariate analysis (Propofol during the 6 first hours)
noclonie <- filter(data,data$clonies_ad == 0 & data$propofol==1 & data$early_withdrawal==0)
clonie <- filter(data,data$clonies_ad == 1 & data$propofol==1 & data$early_withdrawal==0)
a <- filter(data,data$early_withdrawal == 0 & data$propofol==1)
  
#Performing test for normality
x <- shapiro.test(noclonie[["propofol_during_6_first_hours"]])
y <- shapiro.test(clonie[["propofol_during_6_first_hours"]])
  
#Comparing means
if(x$p.value < 0.05 | y$p.value <0.05 | nrow(noclonie["propofol_during_6_first_hours"]) < 30 | nrow(clonie["propofol_during_6_first_hours"]) < 30) {
  z <- wilcox.test(a[["propofol_during_6_first_hours"]] ~ a$clonies_ad, data = a, na.rm = TRUE)
  z <- map_df(list(z), tidy)
  z <- z[c("method", "alternative", "p.value")]
  colnames(z) <- c("propofol_during_6_first_hours", "alternative", "p.value")
  print(kable(z))
  cat("\n")
} else {
  z <- t.test(a[["propofol_during_6_first_hours"]] ~ a$clonies_ad, data = a, var.test = TRUE, na.rm = TRUE)
  z <- map_df(list(z), tidy)
  z <- z[c("method", "alternative", "p.value", "conf.low", "conf.high")]
  colnames(z) <- c("propofol_during_6_first_hours", "alternative", "p.value", "conf.low", "conf.high")
  print(kable(z))
  cat("\n")
}
remove(a, noclonie, clonie, x, y, z) #Cleaning environment

#Resuming data in the subgroup of patients without early withdrawal

#Defining variables of interest (continuous)
variableofinterest <- c("time_before_anaesthetic_withdrawal")

#Resuming continuous variables
for (i in variableofinterest) {
  #Resuming continuous variables in the different subgroups
  noclonie <- filter(data,data$clonies_ad == 0 & data$early_withdrawal == 0)
  clonie <- filter(data,data$clonies_ad == 1 & data$early_withdrawal == 0)
  a <- filter(data,data$early_withdrawal == 0)
  Missing <- c(sum(is.na(noclonie[[i]])),sum(is.na(clonie[[i]])))
  Missing <- as.data.frame(Missing)
  colnames(Missing) <- c("NA")
  row.names(Missing) <- c("No persistent seizure", "Persistent seizure")
  Mean <- tapply(a[[i]], a$clonies_ad, FUN = mean, na.rm = TRUE)
  Mean <- as.data.frame(Mean)
  SD <- tapply(a[[i]], a$clonies_ad, FUN = sd, na.rm = 1)
  SD <- as.data.frame(SD)
  Q1 <- c((quantile(noclonie[[i]], prob=c(.25), na.rm = TRUE)),quantile(clonie[[i]], prob=c(.25), na.rm = TRUE))
  Q1 <- as.data.frame(Q1)
  colnames(Q1) <- c("25%")
  Q3 <- c((quantile(noclonie[[i]], prob=c(.75), na.rm = TRUE)),quantile(clonie[[i]], prob=c(.75), na.rm = TRUE))
  Q3 <- as.data.frame(Q3)
  colnames(Q3) <- c("75%")
  Median <- tapply(a[[i]], a$clonies_ad, FUN = median, na.rm = TRUE)
  Median <- as.data.frame(Median)
  Median <- cbind(Q1, Median, Q3, Mean, SD, Missing)
  row.names(Median) <- c("No persistent seizure", "Persistent seizure")
  print(kable(Median))
  remove(a,noclonie, clonie, Missing, Mean, SD, Q1, Q3, Median) #Cleaning environment
  cat("\n")
}
remove(i, variableofinterest) #Cleaning environment

#Defining variables of interest (factors)
variableofinterest <- c("propofol", "midazolam", "thiopental", "propofolmidazolam", "onlypropofol", "onlymidazolam")

#Resuming factors
for (i in variableofinterest) {
  #Resuming factors (n)
  cat("\n")
  noearlywithdrawal <- filter(data,data$early_withdrawal==0)
  noclonie <- filter(data,data$clonies_ad == 0 & data$early_withdrawal==0)
  clonie <- filter(data,data$clonies_ad == 1 & data$early_withdrawal==0)
  
  x <- table(noearlywithdrawal[[i]], useNA = "always")
  x <- as.data.frame(x)
  y <- table(noclonie[[i]], useNA = "always")
  y <- as.data.frame(y)
  z <- table(clonie[[i]], useNA = "always")
  z <- as.data.frame(z)
  x <- cbind(x,y[2],z[2])
  colnames(x) <- c(i, "Overall Cohort (n)", "No persistent seizure at admission (n)", "Persistent seizure at admission (n)")
  print(kable(x))
  remove(x, y, z) #Cleaning environment
  cat("\n")
  
  #Resuming factors (%)
  a <- prop.table(table(noearlywithdrawal[[i]], useNA = "no"))
  a <- as.data.frame(a)
  b <- prop.table(table(noclonie[[i]], useNA = "no"))
  b <- as.data.frame(b)
  c <- prop.table(table(clonie[[i]], useNA = "no"))
  c <- as.data.frame(c)
  a <- cbind(a, b[2], c[2])
  colnames(a) <- c(i, "Overall Cohort (%)", "No persistent seizure at admission (%)", "Persistent seizure at admission (%)")
  print(kable(a))
  remove(noearlywithdrawal, noclonie, clonie, a, b, c) #Cleaning environment
  cat("\n")
}
remove(i, variableofinterest) #Cleaning environment

##Univariate analysis in the subgroup of patients without early withdrawal (continuous)
variableofinterest <- c("time_before_anaesthetic_withdrawal")

for (i in variableofinterest) {
  noclonie <- filter(data,data$clonies_ad == 0 & data$early_withdrawal == 0)
  clonie <- filter(data,data$clonies_ad == 1 & data$early_withdrawal == 0)
  a <- filter(data,data$early_withdrawal == 0)
  
  #Performing test for normality
  x <- shapiro.test(noclonie[[i]])
  y <- shapiro.test(clonie[[i]])
  
  #Comparing means
  if(x$p.value < 0.05 | y$p.value <0.05 | nrow(noclonie[i]) < 30 | nrow(clonie[i]) < 30) {
    z <- wilcox.test(a[[i]] ~ a$clonies_ad, data = a, na.rm = TRUE)
    z <- map_df(list(z), tidy)
    z <- z[c("method", "alternative", "p.value")]
    colnames(z) <- c(i, "alternative", "p.value")
    print(kable(z))
    cat("\n")
    
  } else {
    z <- t.test(a[[i]] ~ a$clonies_ad, data = a, var.test = TRUE, na.rm = TRUE)
    z <- map_df(list(z), tidy)
    z <- z[c("method", "alternative", "p.value", "conf.low", "conf.high")]
    colnames(z) <- c(i, "alternative", "p.value", "conf.low", "conf.high")
    print(kable(z))
    cat("\n")
  }
  remove(a, noclonie, clonie, x, y ,z) #Cleaning environment
}
remove(i, variableofinterest) #Cleaning environment

##Univariate analysis in the subgroup of patients without early withdrawal (factors)
variableofinterest <- c("propofol", "midazolam", "thiopental", "propofolmidazolam", "onlypropofol", "onlymidazolam")
a <- filter(data,data$early_withdrawal == 0)

for (i in variableofinterest) {
  if(sum((chisq.test(a[[i]], a$clonies_ad, correct = FALSE)$expected) < 5) == 0) {
    x <- chisq.test(a[[i]], a$clonies_ad, correct = FALSE)
    x <- map_df(list(x), tidy)
    x <- x[c("method","p.value")]
    colnames(x) <- c(i, "p.value")
    print(kable(x))
    cat("\n")
  } else {
    x <- fisher.test(a[[i]], a$clonies_ad, workspace = 9000000)
    x <- map_df(list(x), tidy)
    x <- x[c("method", "alternative", "p.value")]
    colnames(x) <-c(i, "alternative", "p.value")
    print(kable(x))
    cat("\n")
  }
  remove(x) #Cleaning environment
}

remove(i, variableofinterest, a) #Cleaning environment
